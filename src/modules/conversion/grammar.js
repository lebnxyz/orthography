// Generated automatically by nearley, version 2.20.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "sentence", "symbols": ["term"], "postprocess": id},
    {"name": "sentence$ebnf$1$subexpression$1", "symbols": ["__", "term"], "postprocess": ([a, b]) => b},
    {"name": "sentence$ebnf$1", "symbols": ["sentence$ebnf$1$subexpression$1"]},
    {"name": "sentence$ebnf$1$subexpression$2", "symbols": ["__", "term"], "postprocess": ([a, b]) => b},
    {"name": "sentence$ebnf$1", "symbols": ["sentence$ebnf$1", "sentence$ebnf$1$subexpression$2"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "sentence", "symbols": ["term", "sentence$ebnf$1"], "postprocess": ([a, b]) => [a, ...b]},
    {"name": "term", "symbols": ["word"], "postprocess": id},
    {"name": "term", "symbols": ["idafe"], "postprocess": id},
    {"name": "term", "symbols": ["pp"], "postprocess": id},
    {"name": "term", "symbols": ["verb"], "postprocess": id},
    {"name": "term", "symbols": ["m"], "postprocess": id},
    {"name": "term", "symbols": ["l"], "postprocess": id},
    {"name": "term", "symbols": ["literal"], "postprocess": id},
    {"name": "literal$string$1", "symbols": [{"literal":"("}, {"literal":"\\"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "literal$ebnf$1", "symbols": [/[^)]/]},
    {"name": "literal$ebnf$1", "symbols": ["literal$ebnf$1", /[^)]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "literal", "symbols": ["literal$string$1", "literal$ebnf$1", {"literal":")"}], "postprocess": ([a, value, b]) => ({ type: `literal`, value: value.join('') })},
    {"name": "literal$string$2", "symbols": [{"literal":"("}, {"literal":"\\"}, {"literal":")"}, {"literal":")"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "literal", "symbols": ["literal$string$2"], "postprocess": () => ({ type: `literal`, value: `)` })},
    {"name": "idafe$string$1", "symbols": [{"literal":"("}, {"literal":"i"}, {"literal":"d"}, {"literal":"a"}, {"literal":"f"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "idafe$subexpression$1", "symbols": ["word"]},
    {"name": "idafe$subexpression$1", "symbols": ["m"]},
    {"name": "idafe$subexpression$1", "symbols": ["idafe"]},
    {"name": "idafe$subexpression$2", "symbols": ["word"]},
    {"name": "idafe$subexpression$2", "symbols": ["m"]},
    {"name": "idafe$subexpression$2", "symbols": ["l"]},
    {"name": "idafe$subexpression$2", "symbols": ["idafe"]},
    {"name": "idafe", "symbols": ["idafe$string$1", "__", "idafe$subexpression$1", "__", "idafe$subexpression$2", {"literal":")"}], "postprocess":  ([a, b, [possessee], c, [possessor], d]) => (
          { type: `idafe`, value: { possessee, possessor }}
        ) },
    {"name": "l$string$1", "symbols": [{"literal":"("}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "l$subexpression$1", "symbols": ["word"]},
    {"name": "l$subexpression$1", "symbols": ["m"]},
    {"name": "l", "symbols": ["l$string$1", "__", "l$subexpression$1", {"literal":")"}], "postprocess": ([a, b, [value], c]) => ({ type: `def`, value })},
    {"name": "m$string$1", "symbols": [{"literal":"("}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "m$subexpression$1", "symbols": [{"literal":"a"}]},
    {"name": "m$subexpression$1", "symbols": [{"literal":"i"}]},
    {"name": "m$subexpression$1", "symbols": [{"literal":"u"}]},
    {"name": "m", "symbols": ["m$string$1", "m$subexpression$1", "__", "word", {"literal":")"}], "postprocess": ([a, [vowel], b, value, c]) => ({ type: `m`, meta: { vowel }, value })},
    {"name": "pp$string$1", "symbols": [{"literal":"("}, {"literal":"p"}, {"literal":"p"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp$subexpression$1$string$1", "symbols": [{"literal":"a"}, {"literal":"c"}, {"literal":"t"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp$subexpression$1", "symbols": ["pp$subexpression$1$string$1"]},
    {"name": "pp$subexpression$1$string$2", "symbols": [{"literal":"p"}, {"literal":"a"}, {"literal":"s"}, {"literal":"s"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp$subexpression$1", "symbols": ["pp$subexpression$1$string$2"]},
    {"name": "pp$subexpression$2$ebnf$1", "symbols": ["consonant"], "postprocess": id},
    {"name": "pp$subexpression$2$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "pp$subexpression$2", "symbols": ["consonant", "consonant", "consonant", "pp$subexpression$2$ebnf$1"]},
    {"name": "pp$ebnf$1", "symbols": ["augmentation"], "postprocess": id},
    {"name": "pp$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "pp", "symbols": ["pp$string$1", "__", "pronoun", "__", "pp_form", "__", "pp$subexpression$1", "__", "pp$subexpression$2", "pp$ebnf$1", {"literal":")"}], "postprocess": 
        ([a, b, conjugation, c, form, d, [voice], e, root, augmentation, f]) => (
          { type: `pp`, meta: { conjugation, form, voice }, value: { root, augmentation }}
        )
          },
    {"name": "verb$string$1", "symbols": [{"literal":"("}, {"literal":"v"}, {"literal":"e"}, {"literal":"r"}, {"literal":"b"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb$subexpression$1$string$1", "symbols": [{"literal":"p"}, {"literal":"s"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb$subexpression$1", "symbols": ["verb$subexpression$1$string$1"]},
    {"name": "verb$subexpression$1$string$2", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb$subexpression$1", "symbols": ["verb$subexpression$1$string$2"]},
    {"name": "verb$subexpression$1$string$3", "symbols": [{"literal":"s"}, {"literal":"b"}, {"literal":"j"}, {"literal":"v"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb$subexpression$1", "symbols": ["verb$subexpression$1$string$3"]},
    {"name": "verb$subexpression$1$string$4", "symbols": [{"literal":"i"}, {"literal":"m"}, {"literal":"p"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb$subexpression$1", "symbols": ["verb$subexpression$1$string$4"]},
    {"name": "verb$subexpression$2$ebnf$1", "symbols": ["consonant"], "postprocess": id},
    {"name": "verb$subexpression$2$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "verb$subexpression$2", "symbols": ["consonant", "consonant", "consonant", "verb$subexpression$2$ebnf$1"]},
    {"name": "verb$ebnf$1", "symbols": ["augmentation"], "postprocess": id},
    {"name": "verb$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "verb", "symbols": ["verb$string$1", "__", "pronoun", "__", "verb_form", "__", "verb$subexpression$1", "__", "verb$subexpression$2", "verb$ebnf$1", {"literal":")"}], "postprocess":  ([a, b, conjugation, c, form, d, [tam], e, root, augmentation, f]) => (
          { type: `verb`, meta: { form, tam, conjugation }, value: { root, augmentation } }
        ) },
    {"name": "word", "symbols": ["stem"], "postprocess": ([stem]) => ({ type: `word`, value: { stem, augmentation: null }})},
    {"name": "word", "symbols": ["stem", "augmentation"], "postprocess": ([stem, augmentation]) => ({ type: `word`, value: { stem, augmentation }})},
    {"name": "stem$subexpression$1", "symbols": ["consonant"]},
    {"name": "stem$subexpression$1", "symbols": ["monosyllable"]},
    {"name": "stem$subexpression$1", "symbols": ["disyllable"], "postprocess": id},
    {"name": "stem$subexpression$1", "symbols": ["trisyllable"], "postprocess": id},
    {"name": "stem$subexpression$1$ebnf$1", "symbols": []},
    {"name": "stem$subexpression$1$ebnf$1", "symbols": ["stem$subexpression$1$ebnf$1", "medial_syllable"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "stem$subexpression$1", "symbols": ["initial_syllable", "stem$subexpression$1$ebnf$1", "last_three_syllables"], "postprocess": ([a, b, c]) => [a, ...b, ...c]},
    {"name": "stem", "symbols": ["stem$subexpression$1"], "postprocess": ([value]) => ({ type: `stem`, meta: { consonant: value.length === 1 && value[0].type === `consonant` }, value })},
    {"name": "monosyllable$macrocall$2", "symbols": ["final_syllable"]},
    {"name": "monosyllable$macrocall$1", "symbols": ["ST", "monosyllable$macrocall$2"], "postprocess": ([st, [value]]) => ({ type: `syllable`, meta: value.meta, value: [...st, ...value.value] })},
    {"name": "monosyllable$macrocall$1", "symbols": ["consonant", "monosyllable$macrocall$2"], "postprocess": ([c, [value]]) => ({ type: `syllable`, meta: value.meta, value: [c, ...value.value] })},
    {"name": "monosyllable$macrocall$1", "symbols": ["monosyllable$macrocall$2"], "postprocess": ([[value]]) => value},
    {"name": "monosyllable", "symbols": ["monosyllable$macrocall$1"], "postprocess": ([syllable]) => ({ ...syllable, meta: { ...syllable.meta, stressed: true }})},
    {"name": "disyllable", "symbols": ["penult_stress_disyllable"], "postprocess": id},
    {"name": "disyllable", "symbols": ["final_stress_disyllable"], "postprocess": id},
    {"name": "penult_stress_disyllable", "symbols": ["initial_syllable", "final_lighter_syllable"], "postprocess": ([b, c]) => [{ ...b, meta: { ...b.meta, stressed: true }}, c]},
    {"name": "penult_stress_disyllable", "symbols": ["initial_syllable", "STRESSED", "final_syllable"], "postprocess": ([b, _, c]) => [{ ...b, meta: { ...b.meta, stressed: true }}, c]},
    {"name": "final_stress_disyllable", "symbols": ["initial_syllable", "final_superheavy_syllable"], "postprocess": ([b, c]) => [b, { ...c, meta: { ...c.meta, stressed: true }}]},
    {"name": "final_stress_disyllable", "symbols": ["initial_syllable", "final_stressed_syllable"]},
    {"name": "initial_heavier_syllable", "symbols": ["initial_heavy_syllable"], "postprocess": id},
    {"name": "initial_heavier_syllable", "symbols": ["initial_superheavy_syllable"], "postprocess": id},
    {"name": "trisyllable", "symbols": ["antepenult_stress_trisyllable"], "postprocess": id},
    {"name": "trisyllable", "symbols": ["initial_syllable", "stressed_penult"], "postprocess": ([a, b]) => [a, ...b]},
    {"name": "trisyllable", "symbols": ["initial_syllable", "stressed_final"], "postprocess": ([a, b]) => [a, ...b]},
    {"name": "antepenult_stress_trisyllable", "symbols": ["initial_syllable", "unstressed_last_2"], "postprocess": ([a, b]) => [{ ...a, meta: { ...a.meta, stressed: true }}, ...b]},
    {"name": "antepenult_stress_trisyllable", "symbols": ["initial_syllable", "STRESSED", "medial_syllable", "final_unstressed_syllable"], "postprocess": ([a, _, b, c]) => [{ ...a, meta: { ...a.meta, stressed: true }}, b, c]},
    {"name": "last_three_syllables", "symbols": ["antepenult_stress_triplet"], "postprocess": id},
    {"name": "last_three_syllables", "symbols": ["medial_syllable", "stressed_penult"], "postprocess": ([a, b]) => [a, ...b]},
    {"name": "last_three_syllables", "symbols": ["medial_syllable", "stressed_final"], "postprocess": ([a, b]) => [a, ...b]},
    {"name": "antepenult_stress_triplet", "symbols": ["medial_syllable", "unstressed_last_2"], "postprocess": ([a, b]) => [{ ...a, meta: { ...a.meta, stressed: true }}, ...b]},
    {"name": "antepenult_stress_triplet", "symbols": ["medial_syllable", "STRESSED", "medial_syllable", "final_unstressed_syllable"], "postprocess": ([a, _, b, c]) => [{ ...a, meta: { ...a.meta, stressed: true }}, b, c]},
    {"name": "unstressed_last_2", "symbols": ["light_syllable", "final_lighter_syllable"]},
    {"name": "stressed_penult", "symbols": ["heavier_syllable", "final_lighter_syllable"], "postprocess": ([b, c]) => [{ ...b, meta: { ...b.meta, stressed: true }}, c]},
    {"name": "stressed_penult", "symbols": ["medial_syllable", "STRESSED", "final_syllable"], "postprocess": ([b, _, c]) => [{ ...b, meta: { ...b.meta, stressed: true }}, c]},
    {"name": "stressed_final", "symbols": ["medial_syllable", "final_superheavy_syllable"], "postprocess": ([b, c]) => [b, { ...c, meta: { ...c.meta, stressed: true }}]},
    {"name": "stressed_final", "symbols": ["medial_syllable", "final_stressed_syllable"]},
    {"name": "heavier_syllable", "symbols": ["heavy_syllable"], "postprocess": id},
    {"name": "heavier_syllable", "symbols": ["superheavy_syllable"], "postprocess": id},
    {"name": "final_lighter_syllable", "symbols": ["final_light_syllable"], "postprocess": id},
    {"name": "final_lighter_syllable", "symbols": ["final_heavy_syllable"], "postprocess": id},
    {"name": "initial_syllable", "symbols": ["initial_light_syllable"], "postprocess": id},
    {"name": "initial_syllable", "symbols": ["initial_heavy_syllable"], "postprocess": id},
    {"name": "initial_syllable", "symbols": ["initial_superheavy_syllable"], "postprocess": id},
    {"name": "final_unstressed_syllable", "symbols": ["final_light_syllable"], "postprocess": id},
    {"name": "final_unstressed_syllable", "symbols": ["final_heavy_syllable"], "postprocess": id},
    {"name": "final_unstressed_syllable", "symbols": ["final_superheavy_syllable"], "postprocess": id},
    {"name": "final_syllable", "symbols": ["final_light_syllable"], "postprocess": id},
    {"name": "final_syllable", "symbols": ["final_heavy_syllable"], "postprocess": id},
    {"name": "final_syllable", "symbols": ["final_stressed_syllable"], "postprocess": id},
    {"name": "final_syllable", "symbols": ["final_superheavy_syllable"], "postprocess": id},
    {"name": "medial_syllable", "symbols": ["light_syllable"], "postprocess": id},
    {"name": "medial_syllable", "symbols": ["heavy_syllable"], "postprocess": id},
    {"name": "medial_syllable", "symbols": ["superheavy_syllable"], "postprocess": id},
    {"name": "initial_light_syllable$macrocall$2", "symbols": ["light_syllable"]},
    {"name": "initial_light_syllable$macrocall$1", "symbols": ["ST", "initial_light_syllable$macrocall$2"], "postprocess": ([st, [value]]) => ({ type: `syllable`, meta: value.meta, value: [...st, ...value.value] })},
    {"name": "initial_light_syllable$macrocall$1", "symbols": ["consonant", "initial_light_syllable$macrocall$2"], "postprocess": ([c, [value]]) => ({ type: `syllable`, meta: value.meta, value: [c, ...value.value] })},
    {"name": "initial_light_syllable$macrocall$1", "symbols": ["initial_light_syllable$macrocall$2"], "postprocess": ([[value]]) => value},
    {"name": "initial_light_syllable", "symbols": ["initial_light_syllable$macrocall$1"], "postprocess": id},
    {"name": "initial_heavy_syllable$macrocall$2", "symbols": ["heavy_syllable"]},
    {"name": "initial_heavy_syllable$macrocall$1", "symbols": ["ST", "initial_heavy_syllable$macrocall$2"], "postprocess": ([st, [value]]) => ({ type: `syllable`, meta: value.meta, value: [...st, ...value.value] })},
    {"name": "initial_heavy_syllable$macrocall$1", "symbols": ["consonant", "initial_heavy_syllable$macrocall$2"], "postprocess": ([c, [value]]) => ({ type: `syllable`, meta: value.meta, value: [c, ...value.value] })},
    {"name": "initial_heavy_syllable$macrocall$1", "symbols": ["initial_heavy_syllable$macrocall$2"], "postprocess": ([[value]]) => value},
    {"name": "initial_heavy_syllable", "symbols": ["initial_heavy_syllable$macrocall$1"], "postprocess": id},
    {"name": "initial_superheavy_syllable$macrocall$2", "symbols": ["superheavy_syllable"]},
    {"name": "initial_superheavy_syllable$macrocall$1", "symbols": ["ST", "initial_superheavy_syllable$macrocall$2"], "postprocess": ([st, [value]]) => ({ type: `syllable`, meta: value.meta, value: [...st, ...value.value] })},
    {"name": "initial_superheavy_syllable$macrocall$1", "symbols": ["consonant", "initial_superheavy_syllable$macrocall$2"], "postprocess": ([c, [value]]) => ({ type: `syllable`, meta: value.meta, value: [c, ...value.value] })},
    {"name": "initial_superheavy_syllable$macrocall$1", "symbols": ["initial_superheavy_syllable$macrocall$2"], "postprocess": ([[value]]) => value},
    {"name": "initial_superheavy_syllable", "symbols": ["initial_superheavy_syllable$macrocall$1"], "postprocess": id},
    {"name": "final_light_syllable", "symbols": ["consonant", "final_light_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `light`, stressed: false }, value: [a, ...b] })},
    {"name": "final_heavy_syllable", "symbols": ["consonant", "final_heavy_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `heavy`, stressed: false }, value: [a, ...b] })},
    {"name": "final_stressed_syllable", "symbols": ["consonant", "final_stressed_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `special`, stressed: true }, value: [a, ...b] })},
    {"name": "final_superheavy_syllable", "symbols": ["consonant", "final_superheavy_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `superheavy`, stressed: false }, value: [a, ...b] })},
    {"name": "final_light_rime", "symbols": ["final_short_vowel"]},
    {"name": "final_heavy_rime", "symbols": ["short_vowel", "consonant"]},
    {"name": "final_stressed_rime$subexpression$1", "symbols": ["long_vowel"], "postprocess": id},
    {"name": "final_stressed_rime$subexpression$1", "symbols": ["A"], "postprocess": id},
    {"name": "final_stressed_rime$subexpression$1", "symbols": ["E"], "postprocess": id},
    {"name": "final_stressed_rime$subexpression$1", "symbols": ["O"], "postprocess": id},
    {"name": "final_stressed_rime", "symbols": ["final_stressed_rime$subexpression$1", "STRESSED"]},
    {"name": "final_superheavy_rime", "symbols": ["superheavy_rime"], "postprocess": id},
    {"name": "final_superheavy_rime", "symbols": ["PLURAL"]},
    {"name": "final_superheavy_rime", "symbols": ["DUAL"]},
    {"name": "light_syllable", "symbols": ["consonant", "light_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `light`, stressed: false }, value: [a, ...b] })},
    {"name": "heavy_syllable", "symbols": ["consonant", "heavy_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `heavy`, stressed: false }, value: [a, ...b] })},
    {"name": "superheavy_syllable", "symbols": ["consonant", "superheavy_rime"], "postprocess": ([a, b]) => ({ type: `syllable`, meta: { weight: `superheavy`, stressed: false }, value: [a, ...b] })},
    {"name": "light_rime", "symbols": ["short_vowel"]},
    {"name": "heavy_rime$subexpression$1", "symbols": ["long_vowel"]},
    {"name": "heavy_rime$subexpression$1", "symbols": ["short_vowel", "consonant"]},
    {"name": "heavy_rime", "symbols": ["heavy_rime$subexpression$1"], "postprocess": id},
    {"name": "superheavy_rime", "symbols": ["long_vowel", "consonant"]},
    {"name": "superheavy_rime", "symbols": ["short_vowel", "consonant", "NO_SCHWA", "consonant"]},
    {"name": "superheavy_rime", "symbols": ["short_vowel", "consonant", "consonant"], "postprocess":  ([a, b, c]) => (
          b === c ? [a, b, c] : [a, b, { type: `epenthetic`, meta: { priority: true }, value: `schwa` }, c]
        )},
    {"name": "superheavy_rime", "symbols": ["long_vowel", "consonant", "consonant"]},
    {"name": "superheavy_rime", "symbols": ["long_vowel", "consonant", "NO_SCHWA", "consonant"]},
    {"name": "vowel$subexpression$1", "symbols": ["long_vowel"]},
    {"name": "vowel$subexpression$1", "symbols": ["short_vowel"]},
    {"name": "vowel", "symbols": ["vowel$subexpression$1"], "postprocess": ([[value]]) => value},
    {"name": "final_short_vowel$subexpression$1", "symbols": ["A"]},
    {"name": "final_short_vowel$subexpression$1", "symbols": ["I_TENSE"]},
    {"name": "final_short_vowel$subexpression$1", "symbols": ["I_LAX"]},
    {"name": "final_short_vowel$subexpression$1", "symbols": ["E"]},
    {"name": "final_short_vowel$subexpression$1", "symbols": ["FEM"]},
    {"name": "final_short_vowel", "symbols": ["final_short_vowel$subexpression$1"], "postprocess": ([[value]]) => ({ type: `vowel`, meta: { length: 1 }, value })},
    {"name": "short_vowel$subexpression$1", "symbols": ["A"]},
    {"name": "short_vowel$subexpression$1", "symbols": ["I_TENSE"]},
    {"name": "short_vowel$subexpression$1", "symbols": ["I_LAX"]},
    {"name": "short_vowel$subexpression$1", "symbols": ["U"]},
    {"name": "short_vowel$subexpression$1", "symbols": ["E"]},
    {"name": "short_vowel$subexpression$1", "symbols": ["O"]},
    {"name": "short_vowel", "symbols": ["short_vowel$subexpression$1"], "postprocess": ([[value]]) => ({ type: `vowel`, meta: { length: 1 }, value })},
    {"name": "long_vowel$subexpression$1", "symbols": ["AA"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["AA_LOWERED"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["AE"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["II"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["UU"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["EE"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["OO"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["AY"]},
    {"name": "long_vowel$subexpression$1", "symbols": ["AW"]},
    {"name": "long_vowel", "symbols": ["long_vowel$subexpression$1"], "postprocess": ([[value]]) => ({ type: `vowel`, meta: { length: 2 }, value })},
    {"name": "consonant$subexpression$1", "symbols": ["plain_consonant"]},
    {"name": "consonant$subexpression$1", "symbols": ["emphatic_consonant"]},
    {"name": "consonant", "symbols": ["consonant$subexpression$1"], "postprocess": ([[value]]) => value},
    {"name": "emphatic_consonant", "symbols": ["plain_consonant", "EMPHATIC"], "postprocess": ([{ value: value }]) => ({ type: `consonant`, meta: { emphatic: true }, value })},
    {"name": "plain_consonant$subexpression$1", "symbols": ["2"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["3"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["B"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["D"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["F"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["G"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["GH"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["H"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["7"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["5"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["J"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["K"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["Q"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["L"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["M"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["N"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["P"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["R"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["S"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["SH"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["T"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["V"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["W"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["Y"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["Z"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["TH"]},
    {"name": "plain_consonant$subexpression$1", "symbols": ["DH"]},
    {"name": "plain_consonant", "symbols": ["plain_consonant$subexpression$1"], "postprocess": ([[value]]) => ({ type: `consonant`, meta: { emphatic: false }, value })},
    {"name": "ST", "symbols": ["S", "T"], "postprocess": () => [{ type: `consonant`, meta: { emphatic: false }, value: `s` }, { type: `consonant`, meta: { emphatic: false }, value: `t` }]},
    {"name": "2", "symbols": [{"literal":"?"}], "postprocess": id},
    {"name": "3", "symbols": [{"literal":"3"}], "postprocess": id},
    {"name": "B", "symbols": [{"literal":"b"}], "postprocess": id},
    {"name": "D", "symbols": [{"literal":"d"}], "postprocess": id},
    {"name": "F", "symbols": [{"literal":"f"}], "postprocess": id},
    {"name": "G", "symbols": [{"literal":"g"}], "postprocess": id},
    {"name": "GH", "symbols": [{"literal":"9"}], "postprocess": () => `gh`},
    {"name": "H", "symbols": [{"literal":"h"}], "postprocess": id},
    {"name": "7", "symbols": [{"literal":"7"}], "postprocess": id},
    {"name": "5", "symbols": [{"literal":"5"}], "postprocess": id},
    {"name": "J", "symbols": [{"literal":"j"}], "postprocess": id},
    {"name": "K", "symbols": [{"literal":"k"}], "postprocess": id},
    {"name": "Q", "symbols": [{"literal":"q"}], "postprocess": id},
    {"name": "L", "symbols": [{"literal":"l"}], "postprocess": id},
    {"name": "M", "symbols": [{"literal":"m"}], "postprocess": id},
    {"name": "N", "symbols": [{"literal":"n"}], "postprocess": id},
    {"name": "P", "symbols": [{"literal":"p"}], "postprocess": id},
    {"name": "R", "symbols": [{"literal":"r"}], "postprocess": id},
    {"name": "S", "symbols": [{"literal":"s"}], "postprocess": id},
    {"name": "SH", "symbols": [{"literal":"x"}], "postprocess": id},
    {"name": "T", "symbols": [{"literal":"t"}], "postprocess": id},
    {"name": "V", "symbols": [{"literal":"v"}], "postprocess": id},
    {"name": "W", "symbols": [{"literal":"w"}], "postprocess": id},
    {"name": "Y", "symbols": [{"literal":"y"}], "postprocess": id},
    {"name": "Z", "symbols": [{"literal":"z"}], "postprocess": id},
    {"name": "TH", "symbols": [{"literal":"8"}], "postprocess": () => `th`},
    {"name": "DH", "symbols": [{"literal":"6"}], "postprocess": () => `dh`},
    {"name": "NULL", "symbols": [{"literal":"0"}], "postprocess": () => `null`},
    {"name": "A", "symbols": [{"literal":"a"}], "postprocess": id},
    {"name": "AA", "symbols": [{"literal":"A"}], "postprocess": () => `alif`},
    {"name": "AA_LOWERED", "symbols": [{"literal":"@"}], "postprocess": () => `lowered alif`},
    {"name": "AE", "symbols": [{"literal":"&"}], "postprocess": () => `ae`},
    {"name": "I_TENSE", "symbols": [{"literal":"!"}], "postprocess": () => `tense i`},
    {"name": "I_LAX", "symbols": [{"literal":"i"}], "postprocess": id},
    {"name": "II", "symbols": [{"literal":"I"}], "postprocess": () => `long i`},
    {"name": "U", "symbols": [{"literal":"u"}], "postprocess": id},
    {"name": "UU", "symbols": [{"literal":"U"}], "postprocess": () => `long u`},
    {"name": "E", "symbols": [{"literal":"e"}], "postprocess": id},
    {"name": "EE", "symbols": [{"literal":"E"}], "postprocess": () => `long e`},
    {"name": "O", "symbols": [{"literal":"o"}], "postprocess": id},
    {"name": "OO", "symbols": [{"literal":"O"}], "postprocess": () => `long o`},
    {"name": "AY", "symbols": [{"literal":"Y"}], "postprocess": () => `ay`},
    {"name": "AW", "symbols": [{"literal":"W"}], "postprocess": () => `aw`},
    {"name": "FEM", "symbols": [{"literal":"c"}], "postprocess": () => `fem`},
    {"name": "DUAL", "symbols": [{"literal":"2"}], "postprocess": () => `dual`},
    {"name": "PLURAL", "symbols": [{"literal":"+"}], "postprocess": () => `plural`},
    {"name": "NO_SCHWA", "symbols": [{"literal":"'"}], "postprocess": () => ({ type: `epenthetic`, meta: { priority: false }, value: `schwa` })},
    {"name": "EMPHATIC", "symbols": [{"literal":"`"}], "postprocess": () => null},
    {"name": "STRESSED", "symbols": [{"literal":"*"}], "postprocess": () => `stressed`},
    {"name": "POSSESSIVE", "symbols": [{"literal":"-"}], "postprocess": id},
    {"name": "OBJECT", "symbols": [{"literal":"."}], "postprocess": id},
    {"name": "CLITIC", "symbols": [{"literal":","}], "postprocess": id},
    {"name": "ANYPRON", "symbols": [{"literal":";"}], "postprocess": id},
    {"name": "verb_form$string$1", "symbols": [{"literal":"a"}, {"literal":"a"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$1"], "postprocess": id},
    {"name": "verb_form$string$2", "symbols": [{"literal":"a"}, {"literal":"i"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$2"], "postprocess": id},
    {"name": "verb_form$string$3", "symbols": [{"literal":"a"}, {"literal":"u"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$3"], "postprocess": id},
    {"name": "verb_form$string$4", "symbols": [{"literal":"i"}, {"literal":"a"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$4"], "postprocess": id},
    {"name": "verb_form$string$5", "symbols": [{"literal":"i"}, {"literal":"i"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$5"], "postprocess": id},
    {"name": "verb_form$string$6", "symbols": [{"literal":"i"}, {"literal":"u"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$6"], "postprocess": id},
    {"name": "verb_form$string$7", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$7"], "postprocess": id},
    {"name": "verb_form$string$8", "symbols": [{"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$8"], "postprocess": id},
    {"name": "verb_form$string$9", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$9"], "postprocess": id},
    {"name": "verb_form$string$10", "symbols": [{"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$10"], "postprocess": id},
    {"name": "verb_form$string$11", "symbols": [{"literal":"t"}, {"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$11"], "postprocess": id},
    {"name": "verb_form$string$12", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$12"], "postprocess": id},
    {"name": "verb_form$string$13", "symbols": [{"literal":"n"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$13"], "postprocess": id},
    {"name": "verb_form$string$14", "symbols": [{"literal":"f"}, {"literal":"t"}, {"literal":"a"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$14"], "postprocess": id},
    {"name": "verb_form$string$15", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"a"}, {"literal":"f"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$15"], "postprocess": id},
    {"name": "verb_form$string$16", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"A"}, {"literal":"f"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$16"], "postprocess": id},
    {"name": "verb_form$string$17", "symbols": [{"literal":"f"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$17"], "postprocess": id},
    {"name": "verb_form$string$18", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"a"}, {"literal":"2"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$18"], "postprocess": id},
    {"name": "verb_form$string$19", "symbols": [{"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"a"}, {"literal":"2"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$19"], "postprocess": id},
    {"name": "verb_form$string$20", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"a"}, {"literal":"2"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "verb_form", "symbols": ["verb_form$string$20"], "postprocess": id},
    {"name": "pp_form$string$1", "symbols": [{"literal":"1"}, {"literal":"/"}, {"literal":"b"}, {"literal":"o"}, {"literal":"t"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$1"], "postprocess": id},
    {"name": "pp_form$string$2", "symbols": [{"literal":"1"}, {"literal":"/"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$2"], "postprocess": id},
    {"name": "pp_form$string$3", "symbols": [{"literal":"1"}, {"literal":"/"}, {"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"i"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$3"], "postprocess": id},
    {"name": "pp_form$string$4", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$4"], "postprocess": id},
    {"name": "pp_form$string$5", "symbols": [{"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$5"], "postprocess": id},
    {"name": "pp_form$string$6", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$6"], "postprocess": id},
    {"name": "pp_form$string$7", "symbols": [{"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$7"], "postprocess": id},
    {"name": "pp_form$string$8", "symbols": [{"literal":"t"}, {"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$8"], "postprocess": id},
    {"name": "pp_form$string$9", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"f"}, {"literal":"e"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$9"], "postprocess": id},
    {"name": "pp_form$string$10", "symbols": [{"literal":"n"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$10"], "postprocess": id},
    {"name": "pp_form$string$11", "symbols": [{"literal":"f"}, {"literal":"t"}, {"literal":"a"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$11"], "postprocess": id},
    {"name": "pp_form$string$12", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"a"}, {"literal":"f"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$12"], "postprocess": id},
    {"name": "pp_form$string$13", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"A"}, {"literal":"f"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$13"], "postprocess": id},
    {"name": "pp_form$string$14", "symbols": [{"literal":"f"}, {"literal":"3"}, {"literal":"a"}, {"literal":"l"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$14"], "postprocess": id},
    {"name": "pp_form$string$15", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"a"}, {"literal":"2"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$15"], "postprocess": id},
    {"name": "pp_form$string$16", "symbols": [{"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"a"}, {"literal":"2"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$16"], "postprocess": id},
    {"name": "pp_form$string$17", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"f"}, {"literal":"a"}, {"literal":"3"}, {"literal":"l"}, {"literal":"a"}, {"literal":"2"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "pp_form", "symbols": ["pp_form$string$17"], "postprocess": id},
    {"name": "augmentation", "symbols": ["delimiter", "pronoun"], "postprocess": ([kind, value]) => ({ type: `augmentation`, meta: { kind }, value })},
    {"name": "delimiter", "symbols": [{"literal":"-"}], "postprocess": () => `possessive`},
    {"name": "delimiter", "symbols": [{"literal":"."}], "postprocess": () => `object`},
    {"name": "delimiter", "symbols": [{"literal":"~"}], "postprocess": () => `pseudo-subject`},
    {"name": "delimiter", "symbols": [{"literal":"|"}], "postprocess": () => `dative`},
    {"name": "pronoun$subexpression$1", "symbols": [{"literal":"1"}, /[mM]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$1"], "postprocess": () => ({ type: `pronoun`, meta: { person: 1, gender: `m`, number: `sg` }})},
    {"name": "pronoun$subexpression$2", "symbols": [{"literal":"1"}, /[fF]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$2"], "postprocess": () => ({ type: `pronoun`, meta: { person: 1, gender: `f`, number: `sg` }})},
    {"name": "pronoun$subexpression$3", "symbols": [{"literal":"1"}, /[nN]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$3"], "postprocess": () => ({ type: `pronoun`, meta: { person: 1, gender: `n`, number: `sg` }})},
    {"name": "pronoun$subexpression$4", "symbols": [{"literal":"1"}, /[nN]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$4"], "postprocess": () => ({ type: `pronoun`, meta: { person: 1, gender: `n`, number: `pl` }})},
    {"name": "pronoun$subexpression$5", "symbols": [{"literal":"2"}, /[mM]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$5"], "postprocess": () => ({ type: `pronoun`, meta: { person: 2, gender: `m`, number: `sg` }})},
    {"name": "pronoun$subexpression$6", "symbols": [{"literal":"2"}, /[fF]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$6"], "postprocess": () => ({ type: `pronoun`, meta: { person: 2, gender: `f`, number: `sg` }})},
    {"name": "pronoun$subexpression$7", "symbols": [{"literal":"2"}, /[nN]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$7"], "postprocess": () => ({ type: `pronoun`, meta: { person: 2, gender: `n`, number: `sg` }})},
    {"name": "pronoun$subexpression$8", "symbols": [{"literal":"2"}, /[mM]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$8"], "postprocess": () => ({ type: `pronoun`, meta: { person: 2, gender: `m`, number: `pl` }})},
    {"name": "pronoun$subexpression$9", "symbols": [{"literal":"2"}, /[fF]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$9"], "postprocess": () => ({ type: `pronoun`, meta: { person: 2, gender: `f`, number: `pl` }})},
    {"name": "pronoun$subexpression$10", "symbols": [{"literal":"2"}, /[nN]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$10"], "postprocess": () => ({ type: `pronoun`, meta: { person: 2, gender: `n`, number: `pl` }})},
    {"name": "pronoun$subexpression$11", "symbols": [{"literal":"3"}, /[mM]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$11"], "postprocess": () => ({ type: `pronoun`, meta: { person: 3, gender: `m`, number: `sg` }})},
    {"name": "pronoun$subexpression$12", "symbols": [{"literal":"3"}, /[fF]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$12"], "postprocess": () => ({ type: `pronoun`, meta: { person: 3, gender: `f`, number: `sg` }})},
    {"name": "pronoun$subexpression$13", "symbols": [{"literal":"3"}, /[mM]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$13"], "postprocess": () => ({ type: `pronoun`, meta: { person: 3, gender: `m`, number: `pl` }})},
    {"name": "pronoun$subexpression$14", "symbols": [{"literal":"3"}, /[fF]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$14"], "postprocess": () => ({ type: `pronoun`, meta: { person: 3, gender: `f`, number: `pl` }})},
    {"name": "pronoun$subexpression$15", "symbols": [{"literal":"3"}, /[nN]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "pronoun", "symbols": ["pronoun$subexpression$15"], "postprocess": () => ({ type: `pronoun`, meta: { person: 3, gender: `n`, number: `pl` }})},
    {"name": "NEGATIVE", "symbols": [{"literal":"X"}]},
    {"name": "__$ebnf$1", "symbols": [/[\s]/]},
    {"name": "__$ebnf$1", "symbols": ["__$ebnf$1", /[\s]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": () => null}
]
  , ParserStart: "sentence"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
